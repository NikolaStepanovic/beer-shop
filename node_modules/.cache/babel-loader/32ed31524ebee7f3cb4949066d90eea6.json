{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { REGISTER_USER } from '../action';\nimport { axios } from 'axios';\n\nconst API = users => {\n  axios.post('https://auth-backend-api.herokuapp.com/register', users).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\n_c = API;\n\nfunction* registerUsers({\n  user\n}) {\n  const response = yield call(API, user);\n  console.log(response);\n\n  try {} catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(REGISTER_USER, registerUsers);\n}\n\nexport default userSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["/home/nidza/Desktop/my-app/src/store/saga/saga.js"],"names":["call","put","takeEvery","REGISTER_USER","axios","API","users","post","then","res","console","log","data","catch","error","registerUsers","user","response","e","message","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnBF,EAAAA,KAAK,CACFG,IADH,CACQ,iDADR,EAC2DD,KAD3D,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACD,GAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,GAPH;AAQD,CATD;;KAAMT,G;;AAWN,UAAUU,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAkC;AAChC,QAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACK,GAAD,EAAMW,IAAN,CAA3B;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AACA,MAAI,CACH,CADD,CACE,OAAOC,CAAP,EAAU;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,OAAd;AACD;AACF;;AAED,UAAUC,QAAV,GAAqB;AACnB,QAAMlB,SAAS,CAACC,aAAD,EAAgBY,aAAhB,CAAf;AACD;;AAED,eAAeK,QAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { REGISTER_USER } from '../action';\nimport { axios } from 'axios';\n\nconst API = users => {\n  axios\n    .post('https://auth-backend-api.herokuapp.com/register', users)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nfunction* registerUsers({ user }) {\n  const response = yield call(API, user);\n  console.log(response);\n  try {\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(REGISTER_USER, registerUsers);\n}\n\nexport default userSaga;\n"]},"metadata":{},"sourceType":"module"}