{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { REGISTER_USER, registerUserSuccess } from '../action';\nimport { axios } from 'axios';\n\nconst API = users => {\n  const data = axios.post('https://auth-backend-api.herokuapp.com/register', users).then(res => res.data);\n};\n\n_c = API;\n\nfunction* registerUsers({\n  user\n}) {\n  try {\n    const response = yield call(API, user);\n    console.log(`response`, response);\n    yield put(registerUserSuccess, response);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(REGISTER_USER, registerUsers);\n}\n\nexport default userSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"API\");","map":{"version":3,"sources":["/home/nidza/Desktop/my-app/src/store/saga/saga.js"],"names":["call","put","takeEvery","REGISTER_USER","registerUserSuccess","axios","API","users","data","post","then","res","registerUsers","user","response","console","log","e","message","userSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,WAAnD;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,IAAI,GAAGH,KAAK,CACfI,IADU,CACL,iDADK,EAC8CF,KAD9C,EAEVG,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACH,IAFN,CAAb;AAGD,CAJD;;KAAMF,G;;AAMN,UAAUM,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAkC;AAChC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACM,GAAD,EAAMO,IAAN,CAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAb,EAAwBF,QAAxB;AACA,UAAMb,GAAG,CAACG,mBAAD,EAAsBU,QAAtB,CAAT;AACD,GAJD,CAIE,OAAOG,CAAP,EAAU;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACC,OAAd;AACD;AACF;;AAED,UAAUC,QAAV,GAAqB;AACnB,QAAMjB,SAAS,CAACC,aAAD,EAAgBS,aAAhB,CAAf;AACD;;AAED,eAAeO,QAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { REGISTER_USER, registerUserSuccess } from '../action';\nimport { axios } from 'axios';\n\nconst API = users => {\n  const data = axios\n    .post('https://auth-backend-api.herokuapp.com/register', users)\n    .then(res => res.data);\n};\n\nfunction* registerUsers({ user }) {\n  try {\n    const response = yield call(API, user);\n    console.log(`response`, response);\n    yield put(registerUserSuccess, response);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(REGISTER_USER, registerUsers);\n}\n\nexport default userSaga;\n"]},"metadata":{},"sourceType":"module"}